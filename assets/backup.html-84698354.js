import{_ as e,a as t}from"./sqlite3-8909330a.js";import{_ as a,o,c as r,f as d}from"./app-b3a9b74b.js";const s={},c=d('<h1 id="backup-restore" tabindex="-1"><a class="header-anchor" href="#backup-restore" aria-hidden="true">#</a> Backup&amp;Restore</h1><h2 id="method-1-built-in" tabindex="-1"><a class="header-anchor" href="#method-1-built-in" aria-hidden="true">#</a> <strong>Method 1-Built-in</strong></h2><p>Use <code>AList</code> to manage <code>Backup/Restore</code> options</p><blockquote><p>Backup: Backup Alist data (<mark><strong>does not include index</strong></mark>)</p><p>Recovery: Backup files before recovery</p><p>Cover: Select coverage when recovery, and will cover the user information</p></blockquote><p><img src="'+e+'" alt=""></p><h2 id="method-2-sqlite3" tabindex="-1"><a class="header-anchor" href="#method-2-sqlite3" aria-hidden="true">#</a> <strong>Method 2-Sqlite3</strong></h2><p>Back up the data/<code>data.db</code> database in the<code> AList</code> directory, and wait for the new environment to replace it directly (<mark><strong>contains index data</strong></mark>)</p><p>If there are two files, if there are <code>data.db-shm</code> and<code> data.db-clothes</code>, they must be backup together.</p><p><img src="'+t+'" alt=""></p><h2 id="method-3-other-database" tabindex="-1"><a class="header-anchor" href="#method-3-other-database" aria-hidden="true">#</a> <strong>Method 3-Other database</strong></h2><p>Other, if you use <code>mysql, postgres</code> and other non <code>sqlite database</code>, please solve it by yourself (<mark><strong>include indexing data</strong></mark>)</p>',11),n=[c];function i(h,p){return o(),r("div",null,n)}const m=a(s,[["render",i],["__file","backup.html.vue"]]);export{m as default};
